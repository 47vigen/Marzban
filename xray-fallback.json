// Inspired by https://github.com/XTLS/Xray-examples/blob/main/All-in-One-fallbacks-Nginx/server.json
// This configuration processes multiple protocol on a single port
// you have to set XRAY_FALLBACK_INBOUND_TAG to "TROJAN_FALLBACK_INBOUND" in your .env to use this config
//  protocols supported on single port:
//      Trojan-TCP
//      Trojan-WS
//      Vless-TCP
//      Vless-WS
//      VMESS-TCP
//      VMESS-WS
//  shadowsocks is on a different port
//
// TLS:
//  fallback inbound which is "TROJAN_FALLBACK_INBOUND" here will do all TLS-Termination
//  if you uncomment the commented security of tls in there and set the required variables
//
{
    "log": {
        "loglevel": "info"
    },
    "inbounds": [
        {
            "tag": "TROJAN_FALLBACK_INBOUND",
            "port": 8443,
            "protocol": "trojan",
            "settings": {
                "clients": [],
                "decryption": "none",
                "fallbacks": [
                    {
                        "path": "/lw",
                        "dest": "@vless-ws",
                        "xver": 2
                    },
                    {
                        "path": "/mw",
                        "dest": "@vmess-ws",
                        "xver": 2
                    },
                    {
                        "path": "/tw",
                        "dest": "@trojan-ws",
                        "xver": 2
                    },
                    {
                        "alpn": "h2",
                        "dest": "@trojan-tcp",
                        "xver": 2
                    },
                    {
                        "dest": "@vless-tcp",
                        "xver": 2
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp"
                // "security": "tls",
                // "tlsSettings": {
                //     "serverName": "SERVER_NAME",
                //     "certificates": [
                //         {
                //             "ocspStapling": 3600,
                //             "certificateFile": "CERT_FILE_PATH",
                //             "keyFile": "KEY_FILE_PATH"
                //         }
                //     ],
                //     "minVersion": "1.2",
                //     "cipherSuites": "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                //     "alpn": [
                //         "h2",
                //         "http/1.1"
                //     ]
                // }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "VLESS_WS_INBOUND",
            "listen": "@vless-ws",
            "protocol": "vless",
            "settings": {
                "clients": [],
                "decryption": "none"
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
                    "acceptProxyProtocol": true,
                    "path": "/lw"
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "VMESS_WS_INBOUND",
            "listen": "@vmess-ws",
            "protocol": "vmess",
            "settings": {
                "clients": []
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
                    "acceptProxyProtocol": true,
                    "path": "/mw"
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "TROJAN_WS_INBOUND",
            "listen": "@trojan-ws",
            "protocol": "trojan",
            "settings": {
                "clients": []
            },
            "streamSettings": {
                "network": "ws",
                "security": "none",
                "wsSettings": {
                    "acceptProxyProtocol": true,
                    "path": "/tw"
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "TROJAN_TCP_H2_INBOUND",
            "listen": "@trojan-tcp",
            "protocol": "trojan",
            "settings": {
                "clients": []
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tcpSettings": {
                    "acceptProxyProtocol": true
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "VLESS_TCP_INBOUND",
            "listen": "@vless-tcp",
            "protocol": "vless",
            "settings": {
                "clients": [],
                "decryption": "none",
                "fallbacks": [
                    {
                        "dest": "@vmess-tcp",
                        "xver": 2
                    }
                ]
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tcpSettings": {
                    "acceptProxyProtocol": true
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "tag": "VMESS_TCP_INBOUND",
            "listen": "@vmess-tcp",
            "protocol": "vmess",
            "settings": {
                "clients": []
            },
            "streamSettings": {
                "network": "tcp",
                "security": "none",
                "tcpSettings": {
                    "acceptProxyProtocol": true
                }
            },
            "sniffing": {
                "enabled": true,
                "destOverride": [
                    "http",
                    "tls"
                ]
            }
        },
        {
            "listen": "0.0.0.0",
            "port": 8880,
            "protocol": "shadowsocks",
            "settings": {
                "clients": []
            },
            "network": "tcp,udp",
            "tag": "SHADOWSOCKS_INBOUND"
        }
    ],
    "outbounds": [
        {
            "protocol": "freedom",
            "settings": {}
        },
        {
            "protocol": "blackhole",
            "tag": "blackhole"
        },
        {
            "tag": "DNS-Internal",
            "protocol": "dns",
            "settings": {
                "address": "127.0.0.53",
                "port": 53
            }
        }
    ],
    "routing": {
        "domainStrategy": "AsIs",
        "settings": {
            "rules": [
                {
                    "type": "field",
                    "outboundTag": "blackhole",
                    "ip": [
                        "geoip:private"
                    ]
                },
                {
                    "type": "field",
                    "port": 53,
                    "network": "tcp,udp",
                    "outboundTag": "DNS-Internal"
                },
                {
                    "type": "field",
                    "outboundTag": "blackhole",
                    "protocol": [
                        "bittorrent"
                    ]
                }
            ]
        }
    }
}